service: bundle-backend

useDotenv: true

plugins:
    - serverless-plugin-optimize
    - serverless-offline

provider:
    name: aws
    runtime: nodejs14.x
    region: eu-north-1
    stage: dev
    timeout: 59
    memorySize: 3008
    environment:
        PORT: ${env:PORT}

        DATABASE_CONNECTION_PROVIDER: ${env:DATABASE_CONNECTION_PROVIDER}
        DATABASE_CONNECTION_TYPE: ${env:DATABASE_CONNECTION_TYPE}
        DATABASE_CONNECTION_HOST: ${env:DATABASE_CONNECTION_HOST}
        DATABASE_CONNECTION_PORT: ${env:DATABASE_CONNECTION_PORT}
        DATABASE_CONNECTION_USERNAME: ${env:DATABASE_CONNECTION_USERNAME}
        DATABASE_CONNECTION_PASSWORD: ${env:DATABASE_CONNECTION_PASSWORD}
        DATABASE_CONNECTION_MAINTENANCE: ${env:DATABASE_CONNECTION_MAINTENANCE}

        DATABASE_USERS_REPOSITORY_PROVIDER: ${env:DATABASE_USERS_REPOSITORY_PROVIDER}

        SECRET_KEY: ${env:SECRET_KEY}
        TOKEN_EXPIRATION_TIME: ${env:TOKEN_EXPIRATION_TIME}

        ROLE_KEY: ${env:ROLE_KEY}
    apiGateway:
        binaryMediaTypes:
            - '*~1*'
            - '*/*'
            - 'multipart~1form-data'
            - 'multipart/form-data'

functions:
    main:
        handler: dist/serverless.handler
        events:
            - http:
                  cors: true
                  path: '/{any+}'
                  method: any
